openapi: 3.0.0
info:
  title: Sports API
  description: API for managing teams, players, and leagues.
  version: 1.0.0

servers:
  - url: http://localhost:3000
    description: Local server

paths:
  /teams:
    get:
      summary: Get all teams
      description: Retrieve a list of all teams.
      responses:
        '200':
          description: A list of teams.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Team'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /teams/{id}:
    get:
      summary: Get a specific team by ID
      description: Retrieve a team by its ID, including its players.
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the team to retrieve.
          schema:
            type: string
      responses:
        '200':
          description: A single team.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
        '404':
          description: Team not found
          content:
            text/plain:
              schema:
                type: string
                example: Team not found
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /players:
    get:
      summary: Get all players
      description: Retrieve a list of all players.
      responses:
        '200':
          description: A list of players.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Player'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /players/{id}:
    get:
      summary: Get a specific player by ID
      description: Retrieve a player by its ID.
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the player to retrieve.
          schema:
            type: string
      responses:
        '200':
          description: A single player.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Player'
        '404':
          description: Player not found
          content:
            text/plain:
              schema:
                type: string
                example: Player not found
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /leagues:
    get:
      summary: Get all leagues
      description: Retrieve a list of all leagues.
      responses:
        '200':
          description: A list of leagues.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/League'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /leagues/{id}:
    get:
      summary: Get a specific league by ID
      description: Retrieve a league by its ID, including its teams.
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the league to retrieve.
          schema:
            type: string
      responses:
        '200':
          description: A single league.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/League'
        '404':
          description: League not found
          content:
            text/plain:
              schema:
                type: string
                example: League not found
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    Team:
      type: object
      properties:
        _id:
          type: string
          description: The unique identifier of the team.
        name:
          type: string
          description: The name of the team.
        players:
          type: array
          items:
            $ref: '#/components/schemas/Player'
    Player:
      type: object
      properties:
        _id:
          type: string
          description: The unique identifier of the player.
        name:
          type: string
          description: The name of the player.
        position:
          type: string
          description: The position of the player.
    League:
      type: object
      properties:
        _id:
          type: string
          description: The unique identifier of the league.
        name:
          type: string
          description: The name of the league.
        teams:
          type: array
          items:
            $ref: '#/components/schemas/Team'
    Error:
      type: object
      properties:
        message:
          type: string
          description: The error message.
